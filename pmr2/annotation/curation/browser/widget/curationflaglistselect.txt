=========================
Curation Flag Dict Widget
=========================

The curation flag dictionary widget provides a jQuery based widget that
allows user to create/destroy valid flag values for a custom curation
flag, with fallback to a plain textarea input if user's browser has no
javascript support.  The jQuery based widget takes the value provided by
the textarea and generates the set of input boxes plus the controls.
Upon submission, those values will be converted back into the format
required and be placed into the textarea so it can be submitted.

As for all widgets, the select widget must provide the new ``IWidget``
interface:
::

    >>> import zope.schema
    >>> from zope.interface import verify
    >>> from z3c.form.interfaces import IWidget
    >>> from pmr2.annotation.curation.browser import widget
    >>> from pmr2.annotation.curation.browser.widget import interfaces
    >>> verify.verifyClass(IWidget, widget.CurationFlagListSelectWidget)
    True
    >>> verify.verifyClass(interfaces.ICurationFlagListSelectWidget,
    ...                    widget.CurationFlagListSelectWidget)
    True


The widget can be instantiated only using the request:
::

    >>> from pmr2.testing.base import TestRequest
    >>> request = TestRequest()
    >>> w = widget.CurationFlagListSelectWidget(request)

Manually assign the widget with some key attributes:
::

    >>> w.id = 'widget-id'
    >>> w.name = 'widget.name'

Check that the base renders.
::

    >>> w.update()
    >>> print w.render()
    <div class="curationflaglistselect-widget">
    </div>

To make it do anything useful, we need to assign a list of values to
allow the user to assign the attributes.

    >>> field = zope.schema.List(
    ...     __name__=u'foo',
    ...     value_type=zope.schema.Choice(
    ...         title=u'Number', 
    ...         values=[42, 43],
    ...     ),
    ... )
    >>> w.field = field
    >>> w.value = [[u'42'], [u'43']]
    >>> w.update()
    >>> print w.render()
